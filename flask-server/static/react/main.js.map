{"version":3,"sources":["index.css","App.css","components/Header.jsx","pages/LandingPage.jsx","components/FormComponents.jsx","components/ParameterControls.jsx","components/UserInfo.jsx","helper.js","components/OutstandingDisplay.jsx","components/LinkDisplay.jsx","components/LinkGenHeader.jsx","components/LinkGenerator.jsx","pages/LoggedIn.jsx","components/Footer.jsx","Client.js","components/ScheduleGreeting.jsx","components/Loading.jsx","components/ConfirmForm.jsx","components/ConfirmMeeting.jsx","components/TimeSlot.jsx","components/OutOfTime.jsx","components/AvailabilityCarousel.jsx","components/ScheduleSuccess.jsx","components/Scheduler.jsx","pages/SchedulingPage.jsx","External.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["___CSS_LOADER_EXPORT___","push","module","i","Header","props","Navbar","bg","variant","Brand","src","process","width","height","className","alt","showLogin","Nav","Item","Button","id","onClick","toggle","isLoggedIn","LandingPage","HoverInfo","OverlayTrigger","placement","overlay","Tooltip","tooltipText","icon","faInfoCircle","LabelAndInfo","Form","Label","htmlFor","label","info","GeneralFormGroup","Group","controlId","Control","feedback","Feedback","text","Checked","Check","inline","type","checked","onChange","DaySelector","weekdays","map","day","index","toggleCheckbox","ParameterControls","name","as","value","weekday","changeDay","hour","changeHour","UserInfo","greeting","split","placeholder","email","readOnly","fetchData","url","body","errorStr","callback","method","headers","JSON","stringify","fetch","then","response","json","data","catch","error","console","IconLink","onMouseOut","tooltip","OutstandingDisplay","useState","linkList","setLinkList","tooltipCopy","setTooltipCopy","useEffect","links","x","window","location","origin","target","ListGroup","deleted","Badge","navigator","clipboard","writeText","faCopy","delete","faTimes","new","Jumbotron","LinkDisplay","setTooltip","link","Row","Text","Spinner","animation","LinkGenHeader","weeksOut","href","toggleVisibility","visible","LinkGenerator","meetingLen","setLen","buffer","setBuffer","workdayStart","setWorkdayStart","workdayEnd","setWorkdayEnd","optionsVisible","setVisibile","setChecked","daysOut","setDaysOut","setWeeksOut","setLink","halfHours","setHalfHours","event","stopPropagation","preventDefault","action","Col","min","val","meeting_len","workday_start","workday_end","days_out","weeks_out","half_hours","length","realDay","addLink","LoggedIn","setName","setEmail","setHour","setDay","setLinks","optimal_hour","optimal_day","Alert","Link","ext","newArray","parse","unshift","log","hangeHour","Footer","Client","loggedIn","ScheduleGreeting","Loading","caption","ConfirmForm","changeName","required","changeEmail","changeNotes","ConfirmMeeting","validated","setValidated","Modal","show","onHide","hide","size","centered","closeButton","Title","noValidate","onSubmit","form","currentTarget","checkValidity","confirm","Body","TimeSlot","date","faClock","start","end","OutOfTime","hostName","AvailabilityCarousel","showIndex","setIndex","times","setTimes","slot","pretty_date","updateInfo","showConfirm","faUndoAlt","ScheduleSuccess","Scheduler","modalVisible","setVisibility","confirmed","setConfirmed","showConfirmed","setShowConfirmed","guestName","updateName","guestEmail","updateEmail","guestNotes","updateNotes","meetingStart","updateStart","meetingEnd","updateEnd","meetingBuffer","updateBuffer","meetingDate","updateDate","prettyDate","updatePrettyDate","notes","setError","SchedulingPage","fetched","setFetched","External","match","params","Main","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6GAAA,YAEIA,EAFJ,MAE8B,IAA4B,GAE1DA,EAAwBC,KAAK,CAACC,EAAOC,EAAI,wZAAyZ,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,2BAA2B,MAAQ,GAAG,SAAW,gFAAgF,eAAiB,CAAC,yZAAyZ,WAAa,O,gCCJthC,YAEIH,EAFJ,MAE8B,IAA4B,GAE1DA,EAAwBC,KAAK,CAACC,EAAOC,EAAI,2CAA4C,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,yBAAyB,MAAQ,GAAG,SAAW,yBAAyB,eAAiB,CAAC,4CAA4C,WAAa,O,yICmCpPC,MA3Bf,SAAgBC,GAEZ,OACI,eAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAA3B,UACI,eAACF,EAAA,EAAOG,MAAR,WACI,qBACIC,IAAKC,mCACLC,MAAM,KACNC,OAAO,KACPC,UAAU,2BACVC,IAAI,kBACL,IAPP,cAUCV,EAAMW,WACH,cAACC,EAAA,EAAIC,KAAL,CAAUJ,UAAU,UAApB,SACI,cAACK,EAAA,EAAD,CAAQX,QAAQ,kBACRY,GAAG,eACHC,QAAS,kBAAMhB,EAAMiB,UAF7B,SAGKjB,EAAMkB,WAAa,SAAW,gBCVxCC,MAbf,SAAqBnB,GAIjB,OACI,qBAAKS,UAAU,eAAf,SACI,oBAAIA,UAAU,cAAd,SAJY,8E,uDCGxB,SAASW,EAAUpB,GAEf,OACI,cAACqB,EAAA,EAAD,CACgBC,UAAU,QACVC,QACI,cAACC,EAAA,EAAD,CAAST,GAAIf,EAAMe,GAAG,WAAtB,SACKf,EAAMyB,cAJ/B,SAOI,cAAC,IAAD,CAAiBC,KAAMC,IACNlB,UAAU,yBARVT,EAAMe,GAAK,SAcxC,SAASa,EAAa5B,GAElB,OACI,qCACA,cAAC6B,EAAA,EAAKC,MAAN,CAAYC,QAAS/B,EAAMe,GAA3B,SACaf,EAAMgC,QAEnB,cAACZ,EAAD,CACmBE,UAAU,QACVP,GAAIf,EAAMe,GACVU,YAAazB,EAAMiC,MAHtBjC,EAAMe,OAQ9B,SAASmB,EAAiBlC,GAEtB,OACG,eAAC6B,EAAA,EAAKM,MAAN,WACK,cAACP,EAAD,CAAcb,GAAIf,EAAMoC,UACVJ,MAAOhC,EAAMgC,MACbC,KAAMjC,EAAMiC,OAC1B,cAACJ,EAAA,EAAKQ,QAAN,eAAkBrC,IACjBA,EAAMsC,UACH,cAACT,EAAA,EAAKQ,QAAQE,SAAd,2BAA2BvC,EAAMsC,UAAjC,aACKtC,EAAMsC,SAASE,WAQpC,SAASC,EAAQzC,GAEb,OACI,eAAC6B,EAAA,EAAKM,MAAN,CAAY1B,UAAU,UAAtB,UACI,cAACoB,EAAA,EAAKC,MAAN,UACK9B,EAAMgC,QAEX,cAACZ,EAAD,CACQE,UAAU,QACVP,GAAIf,EAAMe,GAAK,WACfU,YAAazB,EAAMiC,MAHXjC,EAAMe,GAAK,SAJ/B,IAOyC,IACrC,cAACc,EAAA,EAAKa,MAAN,CAAYC,QAAM,EAACC,KAAK,WACR7B,GAAIf,EAAMe,GACV8B,QAAS7C,EAAM6C,QACfC,SAAU9C,EAAMiB,YAK5C,SAAS8B,EAAY/C,GAIjB,OAEI,eAAC6B,EAAA,EAAKM,MAAN,CAAY1B,UAAU,mBAAtB,UACI,cAACoB,EAAA,EAAKC,MAAN,4BAGA,cAACV,EAAD,CACYE,UAAU,QACVP,GAAI,2BACJU,YAVH,gDAOO,yBAIhB,uBACCzB,EAAMgD,SAASC,KAAI,SAACC,EAAKC,GAAN,OAChB,cAACtB,EAAA,EAAKa,MAAN,CAAYC,QAAM,EAACX,MAAOkB,EACNN,KAAK,WACL7B,GAAI,QAAWoC,EAAQ,GAAK,EAC5BN,QAAS7C,EAAM6C,QAAQM,GACnCL,SAAU,kBAAM9C,EAAMoD,eAAeD,YC9C9CE,MA/Cf,SAA2BrD,GAMvB,OACI,sBAAKS,UAAU,qBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,6BAAK,0BAA4BT,EAAMsD,OACvC,mBAAG7C,UAAU,cAAb,oTAQJ,eAACoB,EAAA,EAAD,WACI,eAACA,EAAA,EAAKM,MAAN,CAAYC,UAAU,qBAAtB,UACI,cAACP,EAAA,EAAKC,MAAN,mDACA,cAACV,EAAD,CAAWL,GAAG,gBAAgBU,YAnB1B,iGAoBJ,eAACI,EAAA,EAAKQ,QAAN,CAAckB,GAAG,SACDC,MAAOxD,EAAMyD,QACbX,SAAU9C,EAAM0D,UAFhC,UAGI,wBAAQF,MAAM,IAAd,oBACA,wBAAQA,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,oBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,0BAGR,eAAC3B,EAAA,EAAKM,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACP,EAAA,EAAKC,MAAN,mDACA,cAACV,EAAD,CAAWL,GAAG,YAAYU,YAhCzB,0GAiCD,cAACI,EAAA,EAAKQ,QAAN,CAAcO,KAAK,OACHY,MAAOxD,EAAM2D,KACbb,SAAU9C,EAAM4D,uBCvBrCC,MAjBf,SAAkB7D,GAEd,IAAM8D,EAAW,UAAY9D,EAAMsD,KAAKS,MAAM,KAAK,GAAK,IACxD,OACQ,sBAAKtD,UAAU,YAAf,UACI,6BAAKqD,IACL,cAACjC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKM,MAAN,WACI,cAACN,EAAA,EAAKC,MAAN,4BACA,cAACD,EAAA,EAAKQ,QAAN,CAAcO,KAAK,OACLoB,YAAahE,EAAMiE,MAAOC,UAAQ,a,wBCZxE,SAASC,EAAUC,EAAKC,EAAMC,EAAUC,GAEpC,IAAMtC,EAAO,CAAEuC,OAAQ,QACnBH,IACApC,EAAKwC,QAAU,CAAE,eAAgB,oBACjCxC,EAAKoC,KAAOK,KAAKC,UAAUN,IAGhBO,MAAMR,EAAKnC,GACT4C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIT,EAASS,MACtBC,OAAM,SAACC,GACJC,QAAQD,MAAMZ,EAAW,KAAMY,M,oCCJvD,SAASE,EAASpF,GAEd,OACI,mBAAGgB,QAAUhB,EAAMgB,QAChBqE,WAAarF,EAAMqF,WADtB,SAEQ,cAAChE,EAAA,EAAD,CACgBC,UAAU,MACVC,QACI,cAACC,EAAA,EAAD,CAAST,GAAIf,EAAMe,GAAK,WAAxB,SACKf,EAAMsF,UAJ/B,SAOI,cAAC,IAAD,CAAiB5D,KAAM1B,EAAM0B,QAPZ1B,EAAMe,MAoE5BwE,MAvDf,SAA4BvF,GAC3B,IAAD,EACoCwF,mBAAS,IAD7C,mBACWC,EADX,KACqBC,EADrB,OAE0CF,mBAAS,QAFnD,mBAEWG,EAFX,KAEwBC,EAFxB,KAmCI,OA/BAC,qBAAU,WACNH,EAAY1F,EAAM8F,MAAM7C,KAAI,SAAC8C,EAAGjG,GAC5B,IAAMsE,EAAM4B,OAAOC,SAASC,OAAS,aAAeH,EAAEI,OACtD,OACI,eAACC,EAAA,EAAUvF,KAAX,WACMuD,EAAM,KACL2B,EAAEM,QAeD,cAACC,EAAA,EAAD,CAAOnG,QAAQ,SAAf,qBAdA,qCACA,cAACiF,EAAD,CAAUpE,QAAS,WACPuF,UAAUC,UAAUC,UAAUrC,GAC9BwB,EAAe,YACnBP,WAAY,WAAOO,EAAe,SAClC7E,GAAIgF,EAAEI,OAAS,QACfzE,KAAOgF,IACPpB,QAASK,IAAgB,IACjC,cAACP,EAAD,CAAUpE,QAAS,WAAOhB,EAAM2G,OAAO7G,IAC/BiB,GAAIgF,EAAEI,OAAS,UACfzE,KAAMkF,IACNtB,QAAQ,WAXhB,IAW6B,OAK/BS,EAAEc,MAAQd,EAAEM,SACV,cAACC,EAAA,EAAD,CAAOnG,QAAQ,UAAf,0BAKjB,CAACH,EAAM8F,MAAOH,IAGb,eAACmB,EAAA,EAAD,CAAWrG,UAAU,sBAArB,UACI,4EACA,mEAGA,4BACI,+GAEJ,8FAGA,cAAC2F,EAAA,EAAD,UACKX,QC5BFsB,MAzCf,SAAqB/G,GACpB,IAAD,EACkCwF,mBAAS,QAD3C,mBACWF,EADX,KACoB0B,EADpB,KAEI,OACI,qCACEhH,EAAMiH,MAAsB,WAAdjH,EAAMiH,MAClB,cAACC,EAAA,EAAD,UACI,eAACrF,EAAA,EAAKM,MAAN,WACI,eAACN,EAAA,EAAKC,MAAN,CAAYrB,UAAU,aAAtB,uEAEwB,IACpB,cAAC2E,EAAD,CAAUpE,QAAS,WACXuF,UAAUC,UAAUC,UAAUzG,EAAMiH,MACpCD,EAAW,YACb3B,WAAY,WAAO2B,EAAW,SAC9BjG,GAAI,iBACJW,KAAOgF,IACPpB,QAASA,OAEnB,cAACzD,EAAA,EAAKQ,QAAN,CAAcO,KAAK,OACLnC,UAAU,eACV+C,MAAOxD,EAAMiH,KACb/C,UAAQ,IACtB,cAACrC,EAAA,EAAKsF,KAAN,CAAW1G,UAAU,aAArB,sIASO,YAAfT,EAAMiH,MACN,qBAAKxG,UAAU,yBAAf,SACI,cAAC2G,EAAA,EAAD,CAASC,UAAU,iBCrBpBC,MAlBf,SAAuBtH,GAEnB,OACI,sBAAKS,UAAU,cAAf,UACI,qEACA,kEACsCT,EAAMuH,SAD5C,qBACwE,IACpE,mBAAGC,KAAK,IAAIxG,QAAShB,EAAMyH,iBAA3B,SACMzH,EAAM0H,QACF,yBACA,kCCuLXC,MAvLf,SAAuB3H,GACtB,IAAD,EACiCwF,mBAAS,MAD1C,mBACWoC,EADX,KACuBC,EADvB,OAEgCrC,mBAAS,MAFzC,mBAEWsC,EAFX,KAEmBC,EAFnB,OAG4CvC,mBAAS,SAHrD,mBAGWwC,EAHX,KAGyBC,EAHzB,OAIwCzC,mBAAS,SAJjD,mBAIW0C,EAJX,KAIuBC,EAJvB,OAK0C3C,oBAAS,GALnD,mBAKW4C,EALX,KAK2BC,EAL3B,OAMoC7C,mBACR,CAAC,SAAU,SAAU,UAAW,YAC5B,WAAY,SAAU,aARtD,mBAMWxC,EANX,aASkCwC,mBACE,EAAC,GAAO,GAAM,GAAM,GAAM,GAAM,GAAM,KAV1E,mBASW3C,EATX,KASoByF,EATpB,OAWkC9C,mBAAS,KAX3C,mBAWW+C,EAXX,KAWoBC,EAXpB,OAYoChD,mBAAS,KAZ7C,mBAYW+B,EAZX,KAYqBkB,EAZrB,OAa4BjD,mBAAS,IAbrC,mBAaWyB,EAbX,KAaiByB,EAbjB,QAcsClD,oBAAS,GAd/C,qBAcWmD,GAdX,MAcsBC,GAdtB,MA2EI,OACI,eAAC9B,EAAA,EAAD,CAAWrG,UAAU,iBAArB,UACI,cAAC,EAAD,CAAe8G,SAAUA,EACTE,iBA9DC,SAACoB,GACtBA,EAAMC,kBACND,EAAME,iBACNV,GAAaD,IA4DOV,QAASU,IACzB,eAACvG,EAAA,EAAD,CAAM2C,OAAO,OAAOwE,OAAO,iBAA3B,UACKZ,GACD,qCACI,eAAClB,EAAA,EAAD,WACI,cAAC+B,EAAA,EAAD,UACI,cAAC/G,EAAD,CAAkBE,UAAU,cACRJ,MAAM,8BACNY,KAAK,SACLY,MAAOoE,EACP9E,SAAU,SAAC+F,GACRhB,EAAOgB,EAAM1C,OAAO3C,QAEvBvB,KA7B5B,kCA8B4BiH,IAAI,QAE5B,cAACD,EAAA,EAAD,UACI,cAAC/G,EAAD,CAAkBE,UAAU,SACRJ,MAAM,2BACNY,KAAK,SACLE,SAAU,SAAC+F,GACPd,EAAUc,EAAM1C,OAAO3C,QAE3BA,MAAOsE,EACP7F,KAvCzB,qFAwCyBiH,IAAI,WAGhC,eAAChC,EAAA,EAAD,WACI,cAAC+B,EAAA,EAAD,UACI,cAAC/G,EAAD,CAAkBE,UAAU,gBACRJ,MAAM,qBACNY,KAAK,OACLE,SAAU,SAAC+F,GACPZ,EAAgBY,EAAM1C,OAAO3C,QAEjCvB,KAjD1B,oDAkD0BuB,MAAOwE,MAE/B,cAACiB,EAAA,EAAD,UACI,cAAC/G,EAAD,CAAkBE,UAAU,cACRJ,MAAM,mBACNY,KAAK,OACLE,SAAU,SAAC+F,GACPV,EAAcU,EAAM1C,OAAO3C,QAE/BvB,KA1D5B,gDA2D4BuB,MAAO0E,SAGnC,cAAChB,EAAA,EAAD,UACI,cAACnE,EAAD,CAAaC,SAAUA,EACPH,QAASA,EACTO,eA1Gb,SAACD,GACpBmF,EAAWzF,EAAQI,KAAI,SAACkG,EAAKrJ,GACzB,OAAOA,IAAMqD,GAASgG,EAAMA,WA0GpB,eAACjC,EAAA,EAAD,WACI,cAAC+B,EAAA,EAAD,UACI,cAAC/G,EAAD,CAAkBnB,GAAG,WACDiB,MAAM,0BACNY,KAAK,SACLsG,IAAI,IACJpG,SAAU,SAAC+F,GACRL,EAAWK,EAAM1C,OAAO3C,QAE3BvB,KA3ExB,qEA4EwBuB,MAAO+E,MAE/B,cAACU,EAAA,EAAD,UACI,cAAC/G,EAAD,CAAkBnB,GAAG,YACjBiB,MAAM,mCACUY,KAAK,SACLE,SAAU,SAAC+F,GACPJ,EAAYI,EAAM1C,OAAO3C,QAE7BvB,KAnFvB,8GAoFuBiH,IAAI,IACJ1F,MAAO+D,SAGnC,cAACL,EAAA,EAAD,UACI,cAACzE,EAAD,CAAST,MAAM,0BACNjB,GAAG,YACHkB,KAxFR,oFAyFQY,QAAS8F,GACT1H,OA7IL,WACpB2H,IAAcD,YAgJN,cAACzB,EAAA,EAAD,UACI,cAACpG,EAAA,EAAD,CAAQX,QAAQ,UACRyC,KAAK,SACL5B,QA1IH,SAAC6H,GAClBA,EAAMC,kBACND,EAAME,iBAENL,EAAQ,WAaR,IAVA,IAAI1D,EAAO,CACPoE,YAAaxB,EACbE,OAAQA,EACRuB,cAAerB,EACfsB,YAAapB,EACbqB,SAAUhB,EACViB,UAAWjC,EACXvE,SAAU,GACVyG,WAAYd,IAEP7I,EAAI,EAAGA,EAAIkD,EAAS0G,OAAQ5J,IAAK,CACtC,IAAM6J,GAAW7J,EAAI,GAAK,EACtB+C,EAAQ/C,IACRkF,EAAKhC,SAASpD,KAAK+J,GAI3BxF,EAAU,iBAAkBa,EAAM,oBAC5B,SAACA,GACK0D,EAAQ1C,OAAOC,SAASC,OAAS,aAAelB,GAChDhF,EAAM4J,QAAQ5E,OAgHNvE,UAAU,WAHlB,8BAOJ,cAAC,EAAD,CAAawG,KAAMA,WCrGpB4C,MA9Ef,SAAkB7J,GACjB,IAAD,EAC6BwF,mBAAS,IADtC,mBACWlC,EADX,KACkBwG,EADlB,OAE8BtE,mBAAS,IAFvC,mBAEWvB,EAFX,KAEkB8F,EAFlB,OAG4BvE,mBAAS,SAHrC,mBAGW7B,EAHX,KAGiBqG,EAHjB,OAI0BxE,mBAAS,KAJnC,mBAIWtC,EAJX,KAIgB+G,EAJhB,OAK8BzE,mBAAS,IALvC,mBAKWM,EALX,KAKkBoE,EALlB,KAmDI,OA5CArE,qBAAU,WAEN1B,EAAU,aAAc,GAAI,oBAClB,SAACa,GACK8E,EAAQ9E,EAAK1B,MACbyG,EAAS/E,EAAKf,OACd+F,EAAQhF,EAAKmF,cACbF,EAAOjF,EAAKoF,aACZF,EAASlF,EAAKc,YAE/B,IAmCC,sBAAKrF,UAAU,YAAf,UACMT,EAAMkF,OACJ,eAACmF,EAAA,EAAD,CAAmBlK,QAAQ,SAA3B,wFAEiB,cAACkK,EAAA,EAAMC,KAAP,CAAY9C,KAAK,gBAAjB,wBACZ,IAHL,iBAAW,SAMblE,GACE,cAAC,EAAD,CAAUA,KAAMA,EAAMW,MAAOA,IAEjC,cAAC,EAAD,CAAe2F,QAlCP,SAACW,GACb,IAAMC,EAAW9F,KAAK+F,MAAM/F,KAAKC,UAAUmB,IAC3C0E,EAASE,QAAQ,CAACvE,OAAQoE,EAAK1D,KAAK,IACpCqD,EAASM,MAgCL,cAAC,EAAD,CAAmBlH,KAAMA,EACNG,QAASP,EACTS,KAAMA,EACND,UAxBT,SAACmF,GACf1E,EAAU,cACA,CAACV,QAASoF,EAAM1C,OAAO3C,OACvB,oBACA,SAACwB,GAAWG,QAAQwF,IAAI3F,MAClCiF,EAAOpB,EAAM1C,OAAO3C,QAoBGoH,UAjCR,SAAC/B,GAChB1E,EAAU,eACA,CAACR,KAAMkF,EAAM1C,OAAO3C,OACpB,qBACA,SAACwB,GAAWG,QAAQwF,IAAI3F,MAClCgF,EAAQnB,EAAM1C,OAAO3C,UA6BfsC,EAAM4D,OAAS,GACb,cAAC,EAAD,CAAoB5D,MAAOA,EACPa,OApDb,SAACxD,GAChBgB,EAAU,eACA,CAACgC,OAAQL,EAAM3C,GAAOgD,QACtB,qBACA,eACV,IAAMqE,EAAW9F,KAAK+F,MAAM/F,KAAKC,UAAUmB,IAC3C0E,EAASrH,GAAOkD,SAAU,EAC1B6D,EAASM,UCrBFK,MAZf,SAAgB7K,GAEZ,OACI,wBAAQS,UAAU,gBAAlB,SACI,sBAAKA,UAAU,+BAAf,UACK,sDACA,YAAY,mBAAG+G,KAAMxH,EAAMoE,IAAK+B,OAAO,SAA3B,wBAFjB,UC4BG2E,MA5Bf,WACC,IAAD,EACsCtF,mBAA6B,MAApBQ,OAAO+E,UADtD,mBACW7J,EADX,aAE8BsE,mBAA0B,MAAjBQ,OAAOd,QAF9C,mBAEWA,EAFX,KAaI,OAbJ,KAcQ,qCACI,cAAC,EAAD,CAAQjE,OAVD,WAEP+E,OAAOC,SAASuB,KADhBtG,EACuB8E,OAAOC,SAASC,OAAS,UAEzBF,OAAOC,SAASC,OAAS,UAOxChF,WAAYA,EACZP,WAAW,IACjBO,EACI,cAAC,EAAD,CAAUgE,MAAOA,IACjB,cAAC,EAAD,IAEN,cAAC,EAAD,CAAQd,IAnBI,yGCCT4G,MAVf,SAA0BhL,GAEtB,OACI,oBAAIS,UAAU,cAAd,mCAC4BT,EAAMsD,SCO3B2H,MAVf,SAAiBjL,GAEb,OACI,sBAAKS,UAAU,UAAf,UACI,4BAAIT,EAAMkL,QAAU,QACpB,cAAC9D,EAAA,EAAD,CAASC,UAAU,e,QCoChB8D,MAxCf,SAAqBnL,GAMjB,OACI,qCACI,cAACkC,EAAD,CAAkBE,UAAU,OACVJ,MAAM,OACNY,KAAK,OACLE,SAAU,SAAC+F,GAAW7I,EAAMoL,WAAWvC,EAAM1C,OAAO3C,QACpDQ,YAAY,OACZ/B,KAXX,0DAYWK,SAAU,CACNE,KAAM,yBACNI,KAAM,WAEVyI,UAAU,IAC5B,cAACnJ,EAAD,CAAkBE,UAAU,QACVJ,MAAM,gBACNY,KAAK,QACLE,SAAU,SAAC+F,GAAW7I,EAAMsL,YAAYzC,EAAM1C,OAAO3C,QACrDvB,KApBV,gGAqBU+B,YAAY,oBACZ1B,SAAU,CACRE,KAAM,wCACNI,KAAM,WAERyI,UAAU,IAC5B,cAACnJ,EAAD,CAAkBE,UAAU,QACVJ,MAAM,mBACNuB,GAAG,WACHtB,KA5BX,oDA6BWa,SAAU,SAAC+F,GAAW7I,EAAMuL,YAAY1C,EAAM1C,OAAO3C,QACrDQ,YAAY,uCCa3BwH,MA7Cf,SAAwBxL,GACvB,IAAD,EACsCwF,oBAAS,GAD/C,mBACWiG,EADX,KACsBC,EADtB,KAcI,OACI,eAACC,EAAA,EAAD,CAAOC,KAAM5L,EAAM4L,KAAMC,OAAQ7L,EAAM8L,KAAMC,KAAK,KAAKC,UAAQ,EAA/D,UACI,cAACL,EAAA,EAAM5L,OAAP,CAAckM,aAAW,EAAzB,SACI,cAACN,EAAA,EAAMO,MAAP,gCAEJ,eAACrK,EAAA,EAAD,CAAMsK,YAAU,EAACV,UAAWA,EACXhL,UAAU,mBACV2L,SAlBJ,SAACvD,GAClB,IAAMwD,EAAOxD,EAAMyD,cACnBzD,EAAME,iBACNF,EAAMC,kBACFuD,EAAKE,gBACLvM,EAAMwM,UAGVd,GAAa,IAQT,UAGI,eAACC,EAAA,EAAMc,KAAP,WACI,8GAEA,cAAC,EAAD,CAAarB,WAAYpL,EAAMoL,WACnBE,YAAatL,EAAMsL,YACnBC,YAAavL,EAAMuL,iBAEnC,eAACI,EAAA,EAAMd,OAAP,WACI,cAAC/J,EAAA,EAAD,CAAQX,QAAQ,YACRa,QAAShB,EAAM8L,KADvB,oBAIA,cAAChL,EAAA,EAAD,CAAQX,QAAQ,UACRyC,KAAK,SADb,yCCnBL8J,MAjBf,SAAkB1M,GAEd,OACI,qBAAKS,UAAU,mBAAf,SACI,eAACK,EAAA,EAAD,CAAQX,QAAQ,oBACR4L,KAAK,KACLtL,UAAU,kBACVO,QAAShB,EAAMgB,QAHvB,UAIK,4BAAIhB,EAAM2M,OACV,cAAC,IAAD,CAAiBjL,KAAMkL,MACvB,+BAAK5M,EAAM6M,MAAX,OAAsB7M,EAAM8M,OAAU,KAN3C,qCCGGC,MAVf,SAAmB/M,GAEf,OACI,oBAAGS,UAAU,cAAb,0FAEoBT,EAAMgN,SAF1B,iCCwDOC,MApDf,SAA8BjN,GAC7B,IAAD,EACkCwF,mBAAS,GAD3C,mBACW0H,EADX,KACsBC,EADtB,OAE8B3H,mBAAS,IAFvC,mBAEW4H,EAFX,KAEkBC,EAFlB,KAgCI,OA5BAxH,qBAAU,WACNwH,EAASrN,EAAMoN,MAAMnK,KAAI,SAACqK,EAAMnK,GAC5B,OACI,qCACA,mBAAG1C,UAAU,cAAb,0CAGA,cAAC,EAAD,CAAUkM,KAAMW,EAAKC,YACXV,MAAOS,EAAKT,MACZC,IAAKQ,EAAKR,IACV9L,QAAS,WACLhB,EAAMwN,WAAWF,EAAKT,MAAOS,EAAKR,IACjBQ,EAAKxF,OAAQwF,EAAKX,KAClBW,EAAKC,aACtBvN,EAAMyN,iBAEpB,eAAC3M,EAAA,EAAD,CAAQiL,KAAK,KACL5L,QAAQ,iBACRa,QAAS,WAAQmM,EAAShK,EAAQ,IAClC1C,UAAU,kBAHlB,UAII,cAAC,IAAD,CAAiBiB,KAAMkF,MACtB,IALL,wCASN,IACNzB,QAAQwF,IAAI,UAAYyC,EAAM1D,QAG1B,mCACCwD,EAAYE,EAAM1D,OACb0D,EAAMF,GACN,qCACE,cAAC,EAAD,CAAWF,SAAUhN,EAAMsD,OAC3B,eAACxC,EAAA,EAAD,CAAQiL,KAAK,KACL5L,QAAQ,kBACRa,QAAS,WAAQmM,EAAS,IAC1B1M,UAAU,kBAHlB,UAII,cAAC,IAAD,CAAiBiB,KAAMgM,MACtB,IALL,oCCjBDC,OA3Bf,SAAyB3N,GAErB,OACI,eAAC2L,EAAA,EAAD,CAAOC,KAAM5L,EAAM4L,KAAMC,OAAQ7L,EAAM8L,KAAMC,KAAK,KAAKC,UAAQ,EAA/D,UACI,cAACL,EAAA,EAAM5L,OAAP,CAAckM,aAAW,EAAzB,SACI,cAACN,EAAA,EAAMO,MAAP,mCAEJ,eAACP,EAAA,EAAMc,KAAP,WACI,kDAAoB,iCAASzM,EAAM2M,OAAnC,QACC,IAAI,iCAAS3M,EAAM6M,QADpB,OACuC,iCAAS7M,EAAM8M,MACrD,IAFD,uBAE0B9M,EAAMgN,SAFhC,gGAIS,iCAAShN,EAAMiE,QAJxB,2CAKC,IAAKjE,EAAMgN,SALZ,OAMA,4HAGJ,cAACrB,EAAA,EAAMd,OAAP,UACI,cAAC/J,EAAA,EAAD,CAAQX,QAAQ,UACRa,QAAShB,EAAM8L,KADvB,wBC+DD8B,OA9Ef,SAAmB5N,GAClB,IAAD,EAC0CwF,oBAAS,GADnD,mBACWqI,EADX,KACyBC,EADzB,OAEsCtI,oBAAS,GAF/C,mBAEWuI,EAFX,KAEsBC,EAFtB,OAG8CxI,oBAAS,GAHvD,mBAGWyI,EAHX,KAG0BC,EAH1B,OAIoC1I,mBAAS,IAJ7C,mBAIW2I,EAJX,KAIsBC,EAJtB,OAKsC5I,mBAAS,IAL/C,mBAKW6I,EALX,KAKuBC,EALvB,OAMsC9I,mBAAS,IAN/C,mBAMW+I,EANX,KAMuBC,EANvB,OAOwChJ,mBAAS,IAPjD,mBAOWiJ,EAPX,KAOyBC,EAPzB,OAQoClJ,mBAAS,IAR7C,mBAQWmJ,EARX,KAQuBC,EARvB,OAS0CpJ,mBAAS,GATnD,mBASWqJ,EATX,KAS0BC,EAT1B,OAUsCtJ,mBAAS,IAV/C,mBAUWuJ,EAVX,KAUwBC,EAVxB,OAW2CxJ,mBAAS,IAXpD,mBAWWyJ,EAXX,KAWuBC,EAXvB,KA+CI,OACI,qCACOnB,EAOD,6HANF,cAAC,EAAD,CAAsBX,MAAOpN,EAAMoN,MACb9J,KAAMtD,EAAMsD,KACZkK,WAbJ,SAACX,EAAOC,EAAKhF,EAAQ6E,EAAMsC,GACjDP,EAAY7B,GACZ+B,EAAU9B,GACVgC,EAAahH,GACbkH,EAAWrC,GACXuC,EAAiBD,IASSxB,YAAa,WACTK,GAAc,MAMxC,cAAC,EAAD,CAAgBlC,KAAMiC,EACN/B,KAAM,kBAAMgC,GAAc,IAC1BtB,QAjDD,WAanBrI,EAAU,oBAZG,CACT0I,MAAO4B,EACP3B,IAAK6B,EACL7G,OAAQ+G,EACRlC,KAAMoC,EACN5I,OAAQnG,EAAMmG,OACdoH,YAAa0B,EACb3L,KAAM6K,EACNlK,MAAOoK,EACPc,MAAOZ,GAG0B,0BACjC,SAACvJ,GACO,UAAWA,GACXhF,EAAMoP,SAASpK,EAAKE,UAIhC4I,GAAc,GACdE,GAAa,GACbE,GAAiB,IA4BG9C,WAAYgD,EACZ9C,YAAagD,EACb/C,YAAaiD,IAC7B,cAAC,GAAD,CAAiB5C,KAAMqC,EACNnC,KAAM,kBAAMoC,GAAiB,IAC7BvB,KAAMsC,EACNpC,MAAO4B,EACP3B,IAAK6B,EACL3B,SAAUhN,EAAMsD,KAChBW,MAAOoK,QCzBrBgB,OAjDf,SAAwBrP,GACvB,IAAD,EAC4BwF,mBAAS,IADrC,mBACWlC,EADX,KACiBwG,EADjB,OAE8BtE,mBAAS,IAFvC,mBAEkBuE,GAFlB,aAG8BvE,mBAAS,IAHvC,mBAGW4H,EAHX,KAGkBC,EAHlB,OAIkC7H,oBAAS,GAJ3C,mBAIW8J,EAJX,KAIoBC,EAJpB,OAK8B/J,mBAAS,IALvC,mBAKWN,EALX,KAKkBkK,EALlB,KAgCI,OAzBAvJ,qBAAU,WACN1B,EAAU,cACE,CAAEgC,OAAQnG,EAAMmG,QAChB,oBACA,SAACnB,GACO,UAAWA,EACXoK,EAASpK,EAAKE,QAGlB4E,EAAQ9E,EAAK1B,MACbyG,EAAS/E,EAAKf,WAE9BE,EAAU,eACE,CAAEgC,OAAQnG,EAAMmG,QAChB,qBACA,SAACnB,GACO,UAAWA,EACXoK,EAASpK,EAAKE,QAGlBmI,EAASrI,GACTuK,GAAW,SAE5B,IAGC,sBAAK9O,UAAU,8BAAf,UACM6C,GACE,cAAC,EAAD,CAAkBA,KAAMA,IAE1B4B,GACE,4BAAKA,IAEPoK,IAAapK,EACT,cAAC,GAAD,CAAWkI,MAAOA,EAAQjH,OAAQnG,EAAMmG,OAAQ7C,KAAMA,EAAM4B,MAAOkK,KAClElK,GAAS,cAAC,EAAD,CAASgG,QAAQ,iCC/B9BsE,OAbf,SAAkBxP,GAId,OACI,qCACI,cAAC,EAAD,CAAQW,WAAW,IACnB,cAAC,GAAD,CAAgBwF,OAAQnG,EAAMyP,MAAMC,OAAOvJ,SAC3C,cAAC,EAAD,CAAQ/B,IANI,yGCcTuL,OAZf,WAEI,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,oBAAoBC,UAAWL,KAC3C,cAAC,IAAD,CAAOI,KAAK,IAAZ,SACI,cAAC,EAAD,U,MCHDE,OARf,WACE,OACE,qBAAKrP,UAAU,MAAf,SACI,cAAC,GAAD,OCDOsP,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpL,MAAK,YAAkD,IAA/CqL,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACI,cAAC,GAAD,QAGNC,SAASC,eAAe,SAM1BZ,O","file":"main.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\r\\n  margin: 0;\\r\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\r\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\r\\n    sans-serif;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  -moz-osx-font-smoothing: grayscale;\\r\\n}\\r\\n\\r\\ncode {\\r\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\r\\n    monospace;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://src/index.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,SAAS;EACT;;cAEY;EACZ,mCAAmC;EACnC,kCAAkC;AACpC;;AAEA;EACE;aACW;AACb\",\"sourcesContent\":[\"body {\\r\\n  margin: 0;\\r\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\r\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\r\\n    sans-serif;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  -moz-osx-font-smoothing: grayscale;\\r\\n}\\r\\n\\r\\ncode {\\r\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\r\\n    monospace;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".App {\\r\\n  text-align: center;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://src/App.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;AACpB\",\"sourcesContent\":[\".App {\\r\\n  text-align: center;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","//----------------------------------------------------------------------------\r\n// Header.jsx\r\n// Author: Erin Vuong\r\n// Header component\r\n//----------------------------------------------------------------------------\r\n\r\nimport React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nfunction Header(props)\r\n{\r\n    return (\r\n        <Navbar bg=\"light\" variant=\"light\">\r\n            <Navbar.Brand>\r\n                <img\r\n                    src={process.env.PUBLIC_URL + \"/images/favicon.ico\"}\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                    alt=\"Clock Favicon\"\r\n                />{' '}\r\n                Docketer\r\n            </Navbar.Brand> \r\n            {props.showLogin &&\r\n                <Nav.Item className=\"ml-auto\">\r\n                    <Button variant=\"outline-primary\"\r\n                            id=\"login-button\"\r\n                            onClick={() => props.toggle()}>\r\n                        {props.isLoggedIn ? 'Logout' : 'Login'}\r\n                    </Button>\r\n                </Nav.Item>\r\n            }\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","//----------------------------------------------------------------------------\r\n// LandingPage.jsx\r\n// Author: Erin Vuong\r\n// Page for when logged out\r\n//----------------------------------------------------------------------------\r\n\r\nimport React from 'react';\r\n\r\nfunction LandingPage(props)\r\n{\r\n    const description = 'Intelligent scheduling with your preferences' +\r\n            ' and productivity in mind.';\r\n    return (\r\n        <div className=\"landing-page\">\r\n            <h1 className=\"text-center\">\r\n                {description}\r\n            </h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LandingPage;\r\n","//----------------------------------------------------------------------------\r\n// FormComponents.jsx\r\n// Author: Erin Vuong\r\n// Form components for link generator\r\n//----------------------------------------------------------------------------\r\n\r\nimport React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nfunction HoverInfo(props) \r\n{\r\n    return (\r\n        <OverlayTrigger key={props.id + \"-info\"}\r\n                        placement=\"right\"\r\n                        overlay={\r\n                            <Tooltip id={props.id+\"-tooltip\"}>\r\n                                {props.tooltipText}\r\n                            </Tooltip>\r\n                        }>\r\n            <FontAwesomeIcon icon={faInfoCircle}\r\n                             className=\"text-info info-icon\"/>\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\n// props: id, label (display label), info (tooltip text)\r\nfunction LabelAndInfo(props)\r\n{\r\n    return (\r\n        <>\r\n        <Form.Label htmlFor={props.id}>\r\n                    {props.label} \r\n        </Form.Label>\r\n        <HoverInfo key={props.id}\r\n                           placement=\"right\"\r\n                           id={props.id}\r\n                           tooltipText={props.info} />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction GeneralFormGroup(props) \r\n{\r\n    return (\r\n       <Form.Group>\r\n            <LabelAndInfo id={props.controlId}\r\n                          label={props.label}\r\n                          info={props.info} />\r\n            <Form.Control {...props} />\r\n            {props.feedback &&\r\n                <Form.Control.Feedback {...props.feedback}>\r\n                    {props.feedback.text}\r\n                </Form.Control.Feedback>\r\n            }\r\n        </Form.Group>\r\n        );\r\n\r\n}\r\n\r\nfunction Checked(props)\r\n{\r\n    return (\r\n        <Form.Group className=\"checked\">\r\n            <Form.Label>\r\n                {props.label}\r\n            </Form.Label>\r\n            <HoverInfo key={props.id + \"-info\"}\r\n                    placement=\"right\"\r\n                    id={props.id + \"-tooltip\"}\r\n                    tooltipText={props.info} /> {' '}\r\n            <Form.Check inline type='checkbox'\r\n                            id={props.id}\r\n                            checked={props.checked}\r\n                            onChange={props.toggle} />\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nfunction DaySelector(props)\r\n{\r\n    \r\n    const weekInfo = \"On which days can this meeting be scheduled?\";\r\n    return (\r\n        \r\n        <Form.Group className=\"weekday-selector\">\r\n            <Form.Label>\r\n                Workweek days\r\n            </Form.Label>\r\n            <HoverInfo key={\"weekday-selector-info\"}\r\n                        placement=\"right\"\r\n                        id={\"weekday-selector-tooltip\"}\r\n                        tooltipText={weekInfo} />\r\n            <br />\r\n            {props.weekdays.map((day, index) => (\r\n                <Form.Check inline label={day}\r\n                                    type=\"checkbox\"\r\n                                    id={\"day-\" + ((index + 6) % 7)}\r\n                                    checked={props.checked[index]}\r\n                        onChange={() => props.toggleCheckbox(index)}/>\r\n            ))}\r\n        </Form.Group>\r\n        \r\n    );\r\n}\r\n\r\nexport { GeneralFormGroup, DaySelector, LabelAndInfo, HoverInfo, Checked };\r\n","//----------------------------------------------------------------------------\r\n// ParameterControls.jsx\r\n// Author: Erin Vuong\r\n// Parameter control components for logged in user\r\n//----------------------------------------------------------------------------\r\nimport React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { HoverInfo } from './FormComponents';\r\n\r\nfunction ParameterControls(props)\r\n{\r\n    const weekdayText = \"If you only had one meeting to schedule during the \" +\r\n        \"week, which day would you schedule it on?\";\r\n    const hourText = \"If you only had one meeting to schedule during \" + \r\n        \"the workday, what time would you schedule it to start?\";\r\n    return (\r\n        <div className=\"parameter-controls\">\r\n            <div className=\"text-center\">\r\n                <h3>{\"Update preferences for \" + props.name}</h3>\r\n                <p className=\"params-text\">\r\n                    These preferences are used during scheduling to try and rank\r\n                    your available time slots by preferability. More preferable time\r\n                    slots are then presented first to increase the likelihood they\r\n                    are picked. We automatically prioritize time slots that don't\r\n                    fragment your existing unscheduled time.\r\n                </p>\r\n            </div>\r\n            <Form>\r\n                <Form.Group controlId=\"paramForm.weekdays\">\r\n                    <Form.Label>Preferred scheduling day of the week</Form.Label>\r\n                    <HoverInfo id=\"pref-weekdays\" tooltipText={weekdayText} />\r\n                    <Form.Control as=\"select\"\r\n                                    value={props.weekday}\r\n                                    onChange={props.changeDay}>\r\n                        <option value=\"0\">Monday</option>\r\n                        <option value=\"1\">Tuesday</option>\r\n                        <option value=\"2\">Wednesday</option>\r\n                        <option value=\"3\">Thursday</option>\r\n                        <option value=\"4\">Friday</option>\r\n                        <option value=\"5\">Saturday</option>\r\n                        <option value=\"6\">Sunday</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"paramForm.hour\">\r\n                    <Form.Label>Preferred scheduling hour of the day</Form.Label>\r\n                    <HoverInfo id=\"pref-hour\" tooltipText={hourText} />\r\n                    <Form.Control type=\"time\"\r\n                                    value={props.hour}\r\n                                    onChange={props.changeHour}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ParameterControls;\r\n","//----------------------------------------------------------------------------\r\n// UserInfo.jsx\r\n// Author: Erin Vuong\r\n// User info display\r\n//----------------------------------------------------------------------------\r\nimport React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nfunction UserInfo(props)\r\n{\r\n    const greeting = \"Hello, \" + props.name.split(\" \")[0] + \"!\";\r\n    return (\r\n            <div className=\"user-info\"> \r\n                <h1>{greeting}</h1>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Your email is</Form.Label>\r\n                        <Form.Control type=\"text\"\r\n                                      placeholder={props.email} readOnly />\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default UserInfo;\r\n","//----------------------------------------------------------------------------\r\n// helper.js\r\n// Author: Erin Vuong\r\n// JS helper methods\r\n//----------------------------------------------------------------------------\r\n\r\nfunction fetchData(url, body, errorStr, callback)\r\n{\r\n    const info = { method: 'POST' };\r\n    if (body) {\r\n        info.headers = { 'Content-Type': 'application/json' };\r\n        info.body = JSON.stringify(body);\r\n    }\r\n\r\n    const retVal = fetch(url, info)\r\n                    .then(response => response.json())\r\n                    .then(data => callback(data))\r\n                    .catch((error) => {\r\n                        console.error(errorStr + ': ', error);\r\n                    });\r\n}\r\n\r\nexport { fetchData };","//----------------------------------------------------------------------------\r\n// OutstandingDisplay.jsx\r\n// Author: Erin Vuong\r\n// Display list for outstanding links\r\n//----------------------------------------------------------------------------\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCopy } from '@fortawesome/free-regular-svg-icons';\r\nimport { Badge, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n\r\nfunction IconLink(props)\r\n{   \r\n    return (\r\n        <a onClick={ props.onClick }\r\n           onMouseOut={ props.onMouseOut }>\r\n                <OverlayTrigger key={props.id}\r\n                                placement=\"top\"\r\n                                overlay={\r\n                                    <Tooltip id={props.id + \"-tooltip\"}>\r\n                                        {props.tooltip}\r\n                                    </Tooltip>\r\n                                } >\r\n                    <FontAwesomeIcon icon={props.icon} />\r\n                </OverlayTrigger>\r\n        </a>\r\n    );\r\n}\r\n\r\nfunction OutstandingDisplay(props)\r\n{\r\n    const [linkList, setLinkList] = useState([]);\r\n    const [tooltipCopy, setTooltipCopy] = useState('Copy');\r\n\r\n    useEffect(() => {\r\n        setLinkList(props.links.map((x, i) => {\r\n            const url = window.location.origin + \"/schedule/\" + x.target;\r\n            return (\r\n                <ListGroup.Item>\r\n                    { url + '  '}\r\n                    { !x.deleted ? \r\n                        <>\r\n                        <IconLink onClick={() => {\r\n                                    navigator.clipboard.writeText(url);\r\n                                    setTooltipCopy('Copied!')}}\r\n                                onMouseOut={() => {setTooltipCopy('Copy')}}\r\n                                id={x.target + '-copy'}\r\n                                icon={ faCopy }\r\n                                tooltip={tooltipCopy} />{' '}\r\n                        <IconLink onClick={() => {props.delete(i)}}\r\n                                id={x.target + '-delete'}\r\n                                icon={faTimes}\r\n                                tooltip=\"Delete\" /> {' '}\r\n                        </>     \r\n                        :\r\n                        <Badge variant=\"danger\">Deleted</Badge>\r\n                    }\r\n                    { x.new && !x.deleted &&\r\n                        <Badge variant=\"success\">New</Badge>\r\n                    }\r\n                </ListGroup.Item>\r\n            );\r\n        }));\r\n    }, [props.links, tooltipCopy]);\r\n\r\n    return (\r\n        <Jumbotron className=\"outstanding-display\">\r\n            <h2>Here are your oustanding scheduling links.</h2>\r\n            <p>\r\n                You can copy or delete links here.\r\n            </p>\r\n            <p>\r\n                <strong>Note that if you delete a link it can no longer be used for scheduling.</strong>\r\n            </p>\r\n            <p>\r\n                Links will be deleted automatically once they have been used.\r\n            </p>\r\n            <ListGroup>\r\n                {linkList}\r\n            </ListGroup>\r\n        </Jumbotron>\r\n    );\r\n}\r\n\r\nexport default OutstandingDisplay;\r\nexport { IconLink };","//----------------------------------------------------------------------------\r\n// LinkDisplay.jsx\r\n// Author: Erin Vuong\r\n// Displays generated scheduling link\r\n//----------------------------------------------------------------------------\r\nimport React, { useState } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { faCopy } from '@fortawesome/free-regular-svg-icons';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { IconLink } from './OutstandingDisplay';\r\n\r\nfunction LinkDisplay(props)\r\n{\r\n    const [tooltip, setTooltip] = useState('Copy')\r\n    return (\r\n        <>\r\n        { props.link && props.link != 'loading' &&\r\n            <Row>\r\n                <Form.Group>\r\n                    <Form.Label className=\"link-label\" >\r\n                        Share this one-time scheduling link to\r\n                        schedule a meeting!{' '}\r\n                        <IconLink onClick={() => {\r\n                                navigator.clipboard.writeText(props.link);\r\n                                setTooltip('Copied!')}}\r\n                              onMouseOut={() => {setTooltip('Copy')}}\r\n                              id={'generated-copy'}\r\n                              icon={ faCopy }\r\n                              tooltip={tooltip} />\r\n                    </Form.Label>\r\n                    <Form.Control type=\"text\"\r\n                                  className=\"link-display\"\r\n                                  value={props.link}\r\n                                  readOnly />\r\n                    <Form.Text className=\"text-muted\" >\r\n                        Once the meeting is booked you will receive\r\n                        an email with details and it will be\r\n                        added to your integrated calendar.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n            </Row>\r\n        }\r\n        {\r\n            props.link === 'loading' &&\r\n            <div className='text-center link-label'>\r\n                <Spinner animation='border'/>\r\n            </div>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LinkDisplay;","//----------------------------------------------------------------------------\r\n// LinkGenHeader.jsx\r\n// Author: Erin Vuong\r\n// Form for generating one-time scheduling link\r\n//----------------------------------------------------------------------------\r\nimport React from 'react';\r\n\r\nfunction LinkGenHeader(props)\r\n{\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h2>Generate a one-time scheduling link</h2>\r\n            <p>\r\n                A meeting can be scheduled up to {props.weeksOut} weeks in advance.{' '}\r\n                <a href=\"#\" onClick={props.toggleVisibility}>\r\n                    { props.visible\r\n                        ? \"Hide advanced options.\"\r\n                        : \"Show advanced options.\"\r\n                    }\r\n                </a> \r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LinkGenHeader;","//----------------------------------------------------------------------------\r\n// LinkGenerator.jsx\r\n// Author: Erin Vuong\r\n// Form for generating one-time scheduling link\r\n//----------------------------------------------------------------------------\r\nimport React, { useState } from 'react';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { GeneralFormGroup, DaySelector, Checked } from './FormComponents';\r\nimport { fetchData } from '../helper';\r\nimport LinkDisplay from './LinkDisplay';\r\nimport LinkGenHeader from './LinkGenHeader';\r\n\r\nfunction LinkGenerator(props)\r\n{\r\n    const [meetingLen, setLen] = useState('60');\r\n    const [buffer, setBuffer] = useState('10');\r\n    const [workdayStart, setWorkdayStart] = useState('09:00');\r\n    const [workdayEnd, setWorkdayEnd] = useState('17:00');\r\n    const [optionsVisible, setVisibile] = useState(false);\r\n    const [weekdays, setWeekdays] = useState(\r\n                            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', \r\n                                'Thursday', 'Friday', 'Saturday']);\r\n    const [checked, setChecked] = useState(\r\n                                    [false, true, true, true, true, true, false]);\r\n    const [daysOut, setDaysOut] = useState('1');\r\n    const [weeksOut, setWeeksOut] = useState('4');\r\n    const [link, setLink] = useState('');\r\n    const [halfHours, setHalfHours] = useState(true);\r\n\r\n    const toggleVisibility = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        setVisibile(!optionsVisible);\r\n    }\r\n\r\n    const toggleHalfHours = () => {\r\n        setHalfHours(!halfHours);\r\n    };\r\n\r\n    const toggleCheckbox = (index) =>{\r\n        setChecked(checked.map((val, i) => {\r\n            return i === index ? !val : val; \r\n        }));\r\n    }\r\n\r\n    const generateLink = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        setLink('loading'); // hide the old link\r\n        \r\n        // prepare data from state\r\n        var data = {\r\n            meeting_len: meetingLen,\r\n            buffer: buffer,\r\n            workday_start: workdayStart,\r\n            workday_end: workdayEnd,\r\n            days_out: daysOut,\r\n            weeks_out: weeksOut,\r\n            weekdays: [],\r\n            half_hours: halfHours\r\n        };\r\n        for (var i = 0; i < weekdays.length; i++) {\r\n            const realDay = (i + 6) % 7;\r\n            if (checked[i]) {\r\n                data.weekdays.push(realDay);\r\n            }\r\n        }\r\n\r\n        fetchData('/generate_link', data, 'Fetch link error',\r\n              (data) => {\r\n                    setLink(window.location.origin + \"/schedule/\" + data);\r\n                    props.addLink(data);\r\n              });\r\n    }\r\n\r\n    const lenInfo = \"How long should the meeting be?\";\r\n    const bufferInfo = \"How long should there be between this meeting \" +\r\n                        \"and other events (before and after)?\";\r\n    const startInfo = \"What is the earliest time this meeting can start?\";\r\n    const endInfo = \"What is the latest time this meeting can end?\";\r\n    const daysOutInfo = \"How many days in advance minimum should this meeting \" + \r\n                            \"be scheduled?\";\r\n    const weeksOutInfo = \"How many weeks in advance can \" +\r\n                        \"this meeting be scheduled (from today, regardless of \" +\r\n                        \"when scheduling starts)?\";\r\n    const halfHourInfo = \"Allow available time slots to start every half hour \" +\r\n                        \"(instead of only every hour)?\"\r\n    return (\r\n        <Jumbotron className=\"link-generator\">\r\n            <LinkGenHeader weeksOut={weeksOut}\r\n                            toggleVisibility={toggleVisibility}\r\n                            visible={optionsVisible} />\r\n            <Form method=\"post\" action=\"/generate_link\">\r\n                {optionsVisible &&\r\n                <>\r\n                    <Row>\r\n                        <Col>\r\n                            <GeneralFormGroup controlId=\"meeting-len\"\r\n                                                label=\"Meeting length (in minutes)\"\r\n                                                type=\"number\"\r\n                                                value={meetingLen}\r\n                                                onChange={(event) => {\r\n                                                   setLen(event.target.value);\r\n                                                }}\r\n                                                info={lenInfo}\r\n                                                min=\"0\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <GeneralFormGroup controlId=\"buffer\"\r\n                                                label=\"Buffer time (in minutes)\"\r\n                                                type=\"number\"\r\n                                                onChange={(event) => {\r\n                                                    setBuffer(event.target.value);\r\n                                                }}\r\n                                                value={buffer}\r\n                                                info={bufferInfo}\r\n                                                min=\"0\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <GeneralFormGroup controlId=\"workday-start\"\r\n                                                label=\"Workday start time\"\r\n                                                type=\"time\"\r\n                                                onChange={(event) => {\r\n                                                    setWorkdayStart(event.target.value);\r\n                                                }}\r\n                                                info={startInfo}\r\n                                                value={workdayStart} />\r\n                        </Col>\r\n                        <Col>\r\n                            <GeneralFormGroup controlId=\"workday-end\"\r\n                                                label=\"Workday end time\"\r\n                                                type=\"time\"\r\n                                                onChange={(event) => {\r\n                                                    setWorkdayEnd(event.target.value);\r\n                                                }}\r\n                                                info={endInfo}\r\n                                                value={workdayEnd} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <DaySelector weekdays={weekdays}\r\n                                        checked={checked}\r\n                                        toggleCheckbox={toggleCheckbox} />\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <GeneralFormGroup id=\"days-out\"\r\n                                                label=\"Minimum days in advance\"\r\n                                                type=\"number\"\r\n                                                min=\"0\"\r\n                                                onChange={(event) => {\r\n                                                   setDaysOut(event.target.value);\r\n                                                }}\r\n                                                info={daysOutInfo}\r\n                                                value={daysOut} />\r\n                        </Col>\r\n                        <Col>\r\n                            <GeneralFormGroup id=\"weeks-out\"\r\n                                label=\"Up to this many weeks in advance\"\r\n                                                type=\"number\"\r\n                                                onChange={(event) => {\r\n                                                    setWeeksOut(event.target.value);\r\n                                                }}\r\n                                                info={weeksOutInfo}\r\n                                                min=\"1\"\r\n                                                value={weeksOut} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Checked label=\"Schedule at half hours?\"\r\n                                 id=\"halfHours\"\r\n                                 info={halfHourInfo}\r\n                                 checked={halfHours}\r\n                                 toggle={toggleHalfHours} />\r\n                    </Row>\r\n                </>\r\n                }\r\n                <Row>\r\n                    <Button variant=\"primary\"\r\n                            type=\"submit\" \r\n                            onClick={generateLink}\r\n                            className=\"centered\">\r\n                        Generate link!\r\n                    </Button>\r\n                </Row>\r\n                <LinkDisplay link={link} />\r\n            </Form>\r\n        </Jumbotron>\r\n        \r\n    );\r\n}\r\n\r\nexport default LinkGenerator;\r\n","//----------------------------------------------------------------------------\r\n// LoggedIn.jsx\r\n// Author: Erin Vuong\r\n// Page for when logged out\r\n//----------------------------------------------------------------------------\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport ParameterControls from '../components/ParameterControls';\r\nimport UserInfo from '../components/UserInfo';\r\nimport LinkGenerator from '../components/LinkGenerator';\r\nimport { fetchData } from '../helper';\r\nimport OutstandingDisplay from '../components/OutstandingDisplay';\r\n\r\nfunction LoggedIn(props)\r\n{\r\n    const [name , setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [hour, setHour] = useState(\"10:00\");\r\n    const [day, setDay] = useState(\"2\");\r\n    const [links, setLinks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // get info from backend\r\n        fetchData('/user_info', {}, 'Fetch user error',\r\n                  (data) => {\r\n                        setName(data.name);\r\n                        setEmail(data.email);\r\n                        setHour(data.optimal_hour);\r\n                        setDay(data.optimal_day);\r\n                        setLinks(data.links);\r\n                  });\r\n    }, []);\r\n\r\n    const deleteLink = (index) => {\r\n        fetchData('/delete_link', \r\n                  {target: links[index].target},\r\n                  'Delete link error',\r\n                  () => {return});\r\n        const newArray = JSON.parse(JSON.stringify(links));\r\n        newArray[index].deleted = true;\r\n        setLinks(newArray);\r\n    };\r\n\r\n    const addLink = (ext) => {\r\n        const newArray = JSON.parse(JSON.stringify(links));\r\n        newArray.unshift({target: ext, new: true});\r\n        setLinks(newArray);\r\n    };\r\n\r\n    const changeHour = (event) => {\r\n        fetchData('/change_hour',\r\n                  {hour: event.target.value},\r\n                  'Change hour error',\r\n                  (data) => { console.log(data) } );\r\n        setHour(event.target.value);\r\n    }\r\n\r\n    const changeDay = (event) => {\r\n        fetchData('/change_day',\r\n                  {weekday: event.target.value},\r\n                  'Change day error',\r\n                  (data) => { console.log(data) } );\r\n        setDay(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-page\">\r\n            { props.error &&\r\n                <Alert key=\"error\" variant='danger'>\r\n                    There is an issue with the connection to your Google account.\r\n                    Please click <Alert.Link href=\"/logout_force\">this link </Alert.Link> \r\n                    {' '}to fix this.\r\n                </Alert>\r\n            }\r\n            { name &&\r\n                <UserInfo name={name} email={email} />\r\n            }\r\n            <LinkGenerator addLink={addLink} />\r\n            <ParameterControls name={name}\r\n                               weekday={day}\r\n                               hour={hour}\r\n                               changeDay={changeDay}\r\n                               hangeHour={changeHour}/>\r\n            { links.length > 0 &&\r\n                <OutstandingDisplay links={links}\r\n                                    delete={deleteLink} />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoggedIn;\r\n","//----------------------------------------------------------------------------\r\n// Footer.jsx\r\n// Author: Erin Vuong\r\n// Footer component\r\n//----------------------------------------------------------------------------\r\n\r\nimport React from 'react';\r\n\r\nfunction Footer(props)\r\n{\r\n    return (\r\n        <footer className=\"bg-light py-5\">\r\n            <div className=\"small text-center text-muted\">\r\n                {'Created for Junior IW (Spring 2021) by Erin Vuong. '}\r\n                {'For help '}<a href={props.url} target=\"_blank\">click here</a>.\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","//----------------------------------------------------------------------------\r\n// Client.js\r\n// Author: Erin Vuong\r\n// Base for internal stuff\r\n//----------------------------------------------------------------------------\r\n\r\nimport React, { useState } from 'react';\r\nimport Header from './components/Header';\r\nimport LandingPage from './pages/LandingPage';\r\nimport LoggedIn from './pages/LoggedIn';\r\nimport Footer from './components/Footer';\r\n\r\nfunction Client()\r\n{\r\n    const [isLoggedIn, setLoggedIn] = useState(window.loggedIn === 'T');\r\n    const [error, setError] = useState(window.error === 'T');\r\n    const loggedInUrl = 'https://docs.google.com/document/d/1uFg-jsFCzDis5LvxQ1Kj1aIRS7ndyUPSUJRlZSwnoBI/edit?usp=sharing';\r\n\r\n    const toggle = () => {\r\n        if (isLoggedIn) {\r\n            window.location.href = window.location.origin + '/logout';\r\n        } else {\r\n            window.location.href = window.location.origin + '/login';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header toggle={toggle}\r\n                    isLoggedIn={isLoggedIn}\r\n                    showLogin={true} />\r\n            { isLoggedIn\r\n                ? <LoggedIn error={error} />\r\n                : <LandingPage />\r\n            }\r\n            <Footer url={loggedInUrl} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Client;\r\n","//----------------------------------------------------------------------------\r\n// ScheduleGreeting.jsx\r\n// Author: Erin Vuong\r\n// Greeting for scheduling page\r\n//----------------------------------------------------------------------------\r\nimport React from 'react';\r\n\r\nfunction ScheduleGreeting(props)\r\n{\r\n    return (\r\n        <h2 className=\"text-center\">\r\n                {`Scheduling with ${props.name}`}\r\n        </h2> \r\n     \r\n    );\r\n}\r\n\r\nexport default ScheduleGreeting;","//----------------------------------------------------------------------------\r\n// Loading.jsx\r\n// Author: Erin Vuong\r\n// Loading component\r\n//----------------------------------------------------------------------------\r\nimport React from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nfunction Loading(props)\r\n{\r\n    return (\r\n        <div className=\"loading\">\r\n            <p>{props.caption + \"...\"}</p>\r\n            <Spinner animation=\"border\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","//----------------------------------------------------------------------------\r\n// ConfirmForm.jsx\r\n// Author: Erin Vuong\r\n// Form used to gather user info and schedule meeting\r\n//----------------------------------------------------------------------------\r\n\r\nimport React from 'react';\r\nimport { GeneralFormGroup } from './FormComponents';\r\n\r\nfunction ConfirmForm(props)\r\n{\r\n    var nameInfo = \"Please provide your name (first and last is preferred).\";\r\n    var emailInfo = \"This will be used to send you meeting details. \" +\r\n                    \"We'll never share your email with anyone else.\";\r\n    var noteInfo = \"Anything you want to share with the meeting host.\"\r\n    return (\r\n        <>\r\n            <GeneralFormGroup controlId=\"name\"\r\n                              label=\"Name\"\r\n                              type=\"text\"\r\n                              onChange={(event) => {props.changeName(event.target.value)}}\r\n                              placeholder=\"Name\"\r\n                              info={nameInfo}\r\n                              feedback={{\r\n                                  text: \"Please provide a name.\",\r\n                                  type: \"invalid\"\r\n                              }}\r\n                              required={true} />\r\n            <GeneralFormGroup controlId=\"email\"\r\n                              label=\"Email address\"\r\n                              type=\"email\"\r\n                              onChange={(event) => {props.changeEmail(event.target.value)}}\r\n                              info={emailInfo}\r\n                              placeholder=\"email@example.com\"\r\n                              feedback={{\r\n                                text: \"Please provide a valid email address.\",\r\n                                type: \"invalid\"\r\n                              }}                              \r\n                              required={true} />\r\n            <GeneralFormGroup controlId=\"notes\"\r\n                              label=\"Additional notes\"\r\n                              as=\"textarea\"\r\n                              info={noteInfo}\r\n                              onChange={(event) => {props.changeNotes(event.target.value)}}\r\n                              placeholder=\"Optional notes for the host...\" />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ConfirmForm;\r\n","//----------------------------------------------------------------------------\r\n// ConfirmMeeting.jsx\r\n// Author: Erin Vuong\r\n// Modal holding stuff for comfirming meeting\r\n//----------------------------------------------------------------------------\r\n\r\nimport React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ConfirmForm from './ConfirmForm';\r\n\r\nfunction ConfirmMeeting(props)\r\n{\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (form.checkValidity()) {\r\n            props.confirm();\r\n            return; \r\n        }\r\n        setValidated(true);\r\n    };\r\n\r\n    return (\r\n        <Modal show={props.show} onHide={props.hide} size=\"lg\" centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Confirm meeting</Modal.Title>\r\n            </Modal.Header>\r\n            <Form noValidate validated={validated}\r\n                             className=\"needs-validation\"\r\n                             onSubmit={handleSubmit}>\r\n                <Modal.Body>\r\n                    <p>Almost there! We just need a little more information\r\n                        to confirm your meeting.</p>\r\n                    <ConfirmForm changeName={props.changeName}\r\n                                changeEmail={props.changeEmail}\r\n                                changeNotes={props.changeNotes} />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\"\r\n                            onClick={props.hide}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" \r\n                            type=\"submit\">\r\n                        Schedule Meeting!\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ConfirmMeeting;\r\n","//----------------------------------------------------------------------------\r\n// TimeSlot.jsx\r\n// Author: Erin Vuong\r\n// Button representing a time slot\r\n//----------------------------------------------------------------------------\r\nimport React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClock } from '@fortawesome/free-regular-svg-icons';\r\n\r\nfunction TimeSlot(props) \r\n{\r\n    return (\r\n        <div className=\"time-slot-button\">\r\n            <Button variant=\"outline-secondary\"\r\n                    size=\"lg\"\r\n                    className=\"carousel-button\"\r\n                    onClick={props.onClick}>\r\n                 <p>{props.date}</p>\r\n                 <FontAwesomeIcon icon={faClock} />\r\n                 <h3>{props.start} to {props.end}</h3>{\"\\n\"}\r\n                 Yes, this time works for me.\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TimeSlot;","//----------------------------------------------------------------------------\r\n// OutOfTime.jsx\r\n// Author: Erin Vuong\r\n// Page that shows when the user runs out of available times\r\n//----------------------------------------------------------------------------\r\n\r\nimport React from 'react';\r\n\r\nfunction OutOfTime(props)\r\n{\r\n    return (\r\n        <p className=\"text-center\">\r\n            It looks like there are no available times that work for you.\r\n            Please contact {props.hostName} to schedule your meeting.\r\n        </p>\r\n    );\r\n}\r\n\r\nexport default OutOfTime;","//----------------------------------------------------------------------------\r\n// AvailabilitySelector.jsx\r\n// Author: Erin Vuong\r\n// Availability selection carousel component\r\n//----------------------------------------------------------------------------\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUndoAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport TimeSlot from './TimeSlot';\r\nimport OutOfTime from './OutOfTime';\r\n\r\nfunction AvailabilityCarousel(props) \r\n{\r\n    const [showIndex, setIndex] = useState(0);\r\n    const [times, setTimes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setTimes(props.times.map((slot, index) => {\r\n            return (\r\n                <>\r\n                <p className=\"text-center\">\r\n                    Does this time work for you?\r\n                </p>\r\n                <TimeSlot date={slot.pretty_date}\r\n                          start={slot.start}\r\n                          end={slot.end}\r\n                          onClick={() => {\r\n                              props.updateInfo(slot.start, slot.end,\r\n                                               slot.buffer, slot.date,\r\n                                               slot.pretty_date);\r\n                              props.showConfirm();\r\n                          }} />\r\n                <Button size=\"sm\"\r\n                        variant=\"outline-danger\"\r\n                        onClick={() => { setIndex(index + 1) }}\r\n                        className=\"carousel-button\">\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                    {' '}No, show me another time.\r\n                </Button>\r\n                </>\r\n            );\r\n    }))}, []);    \r\n    console.log(\"Length \" + times.length);    \r\n\r\n    return (\r\n        <>\r\n        {showIndex < times.length \r\n            ? times[showIndex]\r\n            : <>\r\n                <OutOfTime hostName={props.name} />\r\n                <Button size=\"sm\"\r\n                        variant=\"outline-warning\"\r\n                        onClick={() => { setIndex(0) }}\r\n                        className=\"carousel-button\">\r\n                    <FontAwesomeIcon icon={faUndoAlt} />\r\n                    {' '}Show me the times again.\r\n                </Button>\r\n            </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AvailabilityCarousel;","//----------------------------------------------------------------------------\r\n// ScheduleSuccess.jsx\r\n// Author: Erin Vuong\r\n// Modal holding stuff for comfirming meeting\r\n//----------------------------------------------------------------------------\r\n\r\nimport React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction ScheduleSuccess(props)\r\n{\r\n    return (\r\n        <Modal show={props.show} onHide={props.hide} size=\"lg\" centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Meeting confirmed!</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>Your meeting for <strong>{props.date}</strong> from \r\n                {' '}<strong>{props.start}</strong> to <strong>{props.end}</strong>\r\n                {' '}has been confirmed. {props.hostName} will \r\n                contact you about meeting location details. You should receive a confirmation\r\n                email at <strong>{props.email}</strong>. To reschedule or cancel please contact\r\n                {' '}{props.hostName}.</p>\r\n                <p>If you used a Google email address the event has been added\r\n                    tenatively to your calendar.</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\"\r\n                        onClick={props.hide}>\r\n                    Done\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ScheduleSuccess;\r\n","//----------------------------------------------------------------------------\r\n// Scheduler.jsx\r\n// Author: Erin Vuong\r\n// Coordinates scheduling components\r\n//----------------------------------------------------------------------------\r\nimport React, { useState } from 'react';\r\nimport ConfirmMeeting from './ConfirmMeeting';\r\nimport Button from 'react-bootstrap/Button';\r\nimport AvailabilityCarousel from './AvailabilityCarousel';\r\nimport { fetchData } from '../helper';\r\nimport ScheduleSuccess from './ScheduleSuccess';\r\nimport { faPassport } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Scheduler(props)\r\n{\r\n    const [modalVisible, setVisibility] = useState(false);\r\n    const [confirmed, setConfirmed] = useState(false);\r\n    const [showConfirmed, setShowConfirmed] = useState(false);\r\n    const [guestName, updateName] = useState(\"\");\r\n    const [guestEmail, updateEmail] = useState(\"\");\r\n    const [guestNotes, updateNotes] = useState(\"\");\r\n    const [meetingStart, updateStart] = useState(\"\");\r\n    const [meetingEnd, updateEnd] = useState(\"\");\r\n    const [meetingBuffer, updateBuffer] = useState(0);\r\n    const [meetingDate, updateDate] = useState(\"\");\r\n    const [prettyDate, updatePrettyDate] = useState(\"\");\r\n\r\n    const confirmMeeting = () => {\r\n        const info = {\r\n            start: meetingStart,\r\n            end: meetingEnd,\r\n            buffer: meetingBuffer,\r\n            date: meetingDate,\r\n            target: props.target,\r\n            pretty_date: prettyDate,\r\n            name: guestName,\r\n            email: guestEmail,\r\n            notes: guestNotes\r\n        };\r\n\r\n        fetchData('/schedule_meeting', info, 'Schedule meeting error',\r\n            (data) => {\r\n                if ('error' in data) {\r\n                    props.setError(data.error);\r\n            }\r\n        });\r\n        \r\n        setVisibility(false);\r\n        setConfirmed(true);\r\n        setShowConfirmed(true);\r\n    }\r\n\r\n    // updates meeting info\r\n    const updateMeetingInfo = (start, end, buffer, date, prettyDate) => {\r\n        updateStart(start);\r\n        updateEnd(end);\r\n        updateBuffer(buffer);\r\n        updateDate(date);\r\n        updatePrettyDate(prettyDate);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            { !confirmed ?\r\n            <AvailabilityCarousel times={props.times}\r\n                                  name={props.name}\r\n                                  updateInfo={updateMeetingInfo}\r\n                                  showConfirm={() => { \r\n                                      setVisibility(true)\r\n                                  }} />\r\n            : <p>Thank you for scheduling! You can close this page now.\r\n                Check your email for meeting details.\r\n                </p>\r\n            }\r\n            <ConfirmMeeting show={modalVisible}\r\n                            hide={() => setVisibility(false)}\r\n                            confirm={confirmMeeting}\r\n                            changeName={updateName}\r\n                            changeEmail={updateEmail}\r\n                            changeNotes={updateNotes} />\r\n            <ScheduleSuccess show={showConfirmed}\r\n                             hide={() => setShowConfirmed(false)}\r\n                             date={prettyDate}\r\n                             start={meetingStart}\r\n                             end={meetingEnd}\r\n                             hostName={props.name}\r\n                             email={guestEmail} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Scheduler;","//----------------------------------------------------------------------------\r\n// SchedulingPage.jsx\r\n// Author: Erin Vuong\r\n// Page for scheduling meetings\r\n//----------------------------------------------------------------------------\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport ScheduleGreeting from '../components/ScheduleGreeting';\r\nimport Loading from '../components/Loading';\r\nimport Scheduler from '../components/Scheduler';\r\nimport { fetchData } from '../helper';\r\n\r\nfunction SchedulingPage(props)\r\n{\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\"); // not being used\r\n    const [times, setTimes] = useState([]);\r\n    const [fetched, setFetched] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchData('/fetch_user', \r\n                    { target: props.target },\r\n                    'Fetch user error',\r\n                    (data) => {\r\n                        if ('error' in data) {\r\n                            setError(data.error);\r\n                            return;\r\n                        }\r\n                        setName(data.name);\r\n                        setEmail(data.email);\r\n                    });\r\n        fetchData('/fetch_times',\r\n                    { target: props.target },\r\n                    'Fetch times error',\r\n                    (data) => {\r\n                        if ('error' in data) {\r\n                            setError(data.error);\r\n                            return;\r\n                        }\r\n                        setTimes(data);\r\n                        setFetched(true);\r\n                     });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"scheduling-page text-center\">\r\n            { name &&\r\n                <ScheduleGreeting name={name} />\r\n            }\r\n            { error &&\r\n                <p>{ error }</p>\r\n            }\r\n            { fetched && ! error\r\n                ? <Scheduler times={times}  target={props.target} name={name} error={setError} />\r\n                : !error && <Loading caption=\"Fetching available times\" />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SchedulingPage;\r\n","//----------------------------------------------------------------------------\r\n// External.js\r\n// Author: Erin Vuong\r\n// Base for external stuff\r\n//----------------------------------------------------------------------------\r\n\r\nimport React from 'react';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport SchedulingPage from './pages/SchedulingPage';\r\n\r\nfunction External(props)\r\n{\r\n    const scheduleUrl = \"https://docs.google.com/document/d/1FZGoeQps5YBUeevAp_zUig0guIGgJjFvd-dx14NKvZY/edit?usp=sharing\";\r\n\r\n    return (\r\n        <>\r\n            <Header showLogin={false} />\r\n            <SchedulingPage target={props.match.params.target} />\r\n            <Footer url={scheduleUrl} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default External;\r\n","//----------------------------------------------------------------------------\r\n// Main.js\r\n// Author: Erin Vuong\r\n// routing component, main pages\r\n//----------------------------------------------------------------------------\r\n\r\nimport React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n// Import pages here\r\nimport Client from './Client';\r\nimport External from './External';\r\n\r\n// use <Link to\"##\"><button></button></Link> from react-router-dom;\r\n\r\nfunction Main()\r\n{\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/schedule/:target\" component={External} />\r\n            <Route path=\"/\">\r\n                <Client />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","//----------------------------------------------------------------------------\r\n// App.js\r\n// Author: Erin Vuong\r\n// Base app js file\r\n//----------------------------------------------------------------------------\r\n\r\nimport React from 'react';\r\nimport Main from './Main';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n        <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}